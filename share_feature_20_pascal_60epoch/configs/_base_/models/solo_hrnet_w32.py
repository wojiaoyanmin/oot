model=dict(
    type='YMDetector',
    pretrained='open-mmlab://msra/hrnetv2_w32',
    backbone=dict(
        type='HRNet',
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(32, 64)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(32, 64, 128)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(32, 64, 128, 256)))),
    neck=dict(
        type='HRFPN',
        in_channels=[32, 64, 128, 256],
        out_channels=256),
    ins_head=dict(
        type='SOLOHead',
        num_classes=19,#不算background
        in_channels=256,
        stacked_convs=4,
        seg_feat_channels=512,
        strides=[4, 8, 16, 16],
        scale_ranges=((1, 48), (24, 96), (48, 192), (96, 2048)),
        sigma=0.2,
        num_grids=[40, 36, 24, 16],
        ins_out_channels=256,
        loss_ins=dict(
            type='DiceLoss',
            loss_weight=3.0),
        loss_cate=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),
    mask_feat_head=dict(
        type='MaskFeatHead',
        in_channels=256,
        out_channels=128,
        start_level=0,
        end_level=3,
        num_classes=256,
        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True)),
)
train_cfg=dict()
test_cfg=dict(
    nms_pre=500,
    score_thr=0.1,
    mask_thr=0.5,
    update_thr=0.1,#0.05,0.1
    kernel='gaussian',
    sigma=2.0,
    max_per_img=100)
